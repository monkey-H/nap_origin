#!/bin/bash
set -x

APP=$1
username=$(echo $APP | cut -d "_" -f 1)
USERAPPDIR=/home/nap/apps/$username/$APP
WORKDIR=/etc/systemd/system
REGISTRY="docker.iwanna.xyz:5000/hmonkey"

touch $USERAPPDIR/Dockerfile
sudo chmod o+w $USERAPPDIR/Dockerfile

sudo touch $WORKDIR/image_${APP}.service
sudo chmod o+w $WORKDIR/image_${APP}.service
MASTER_IMAGE="${WORKDIR}/image_${APP}.service"

sudo touch $WORKDIR/${APP}_slaves@.service
sudo chmod o+w $WORKDIR/${APP}_slaves@.service
SLAVE_CONTAINERS="$WORKDIR/${APP}_slaves@.service"

sudo touch $WORKDIR/discovery_slave_${APP}@.service
sudo chmod o+w $WORKDIR/discovery_slave_${APP}@.service
DISCOVERY_SLAVE="${WORKDIR}/discovery_slave_${APP}@.service"

sudo touch $WORKDIR/${APP}_master.service
MASTER_CONTAINER="${WORKDIR}/${APP}_master.service"
sudo chmod o+w $MASTER_CONTAINER

sudo touch $WORKDIR/discovery_master_${APP}.service
DISCOVERY_MASTER="${WORKDIR}/discovery_master_${APP}.service"
sudo chmod o+w $DISCOVERY_MASTER

before=""
HOSTS=1
while read line; do
        key=$(echo $line | cut -f 1 -d ' ')
        str=""
        value=$(echo ${line/$key/$str})
        case $key in
                scale:)
			HOSTS=${value}
			before="${key}"
                ;;
                command:)
                        echo $value > $USERAPPDIR/run
			before="${key}"
                ;;
                *)
			if [ -z "$(echo $key | grep :)" ] && [ "${before}" = "command:" ]; then
                       		echo ${line} >> $USERAPPDIR/run
			fi
        esac
done < $USERAPPDIR/mapreduce.xml

cat > $USERAPPDIR/Dockerfile <<EOF
FROM docker.iwanna.xyz:5000/hmonkey/hadoop_master:v3
MAINTAINER hmonkey <5681713@qq.com>
COPY src /app/src
COPY run /app/run
WORKDIR /app

EOF

cat > ${MASTER_IMAGE} <<EOF
[Unit]
Description=images
Requires=docker.service
After=docker.service

[Service]
TimeoutStartSec=900m
ExecStartPre=/usr/bin/docker build -t $REGISTRY/${APP}_image $USERAPPDIR
ExecStart=/usr/bin/docker push $REGISTRY/${APP}_image

[Install]
WantedBy=multi-user.target
EOF


cd $WORKDIR
sudo systemctl enable image_${APP}.service
sudo systemctl start image_${APP}.service

cat > ${SLAVE_CONTAINERS} <<EOF
[Unit]
Description=slave containers
Requires=docker.service
After=docker.service

[Service]
TimeoutStartSec=900m
ExecStartPre=-/usr/bin/docker stop ${APP}_slave%i
ExecStartPre=-/usr/bin/docker rm ${APP}_slave%i
ExecStartPre=-/usr/bin/docker pull $REGISTRY/hadoop_slave:v3
ExecStart=/usr/bin/docker run -P --name ${APP}_slave%i $REGISTRY/hadoop_slave:v3 /usr/sbin/sshd -D
ExecStop=/usr/bin/docker stop ${APP}_slave%i
ExecStopPost=-/usr/bin/docker rm ${APP}_slave%i

EOF

fleetctl destroy ${SLAVE_CONTAINERS}
fleetctl submit ${SLAVE_CONTAINERS}

for ((i=1; i<=$HOSTS; ++i))
do
	fleetctl destroy ${APP}_slaves@$i.service > /dev/null
	fleetctl start ${APP}_slaves@$i.service > /dev/null
done

cat > ${DISCOVERY_SLAVE} <<EOF
[Unit]
Description=${APP}_discovery
BindsTo=${APP}_slaves@%i.service
After=${APP}_slaves@%i.service

[Service]
ExecStart=/bin/sh -c "while true; do appip=\$(docker inspect --format='{{.NetworkSettings.IPAddress}}' ${APP}_slave%i); etcdctl set /services/mapreduce/$APP/slaves/slave%i \$appip --ttl 60; sleep 10; done"
ExecStop=/usr/bin/etcdctl rm /services/mapreduce/$APP/slaves/slave%i

[X-Fleet]
MachineOf=${APP}_slaves@%i.service
EOF

fleetctl destroy ${DISCOVERY_SLAVE}
fleetctl submit ${DISCOVERY_SLAVE}

for ((i=1; i<=$HOSTS; ++i))
do
        fleetctl destroy discovery_slave_${APP}@$i.service > /dev/null
        fleetctl start discovery_slave_${APP}@$i.service > /dev/null
done

cat > ${MASTER_CONTAINER} <<EOF
[Unit]
Description=master container
Requires=docker.service
After=docker.service

[Service]
TimeoutStartSec=900m
ExecStartPre=-/usr/bin/docker stop ${APP}_master
ExecStartPre=-/usr/bin/docker rm ${APP}_master
ExecStartPre=-/usr/bin/docker pull $REGISTRY/${APP}_image
ExecStart=/usr/bin/docker run -P --name ${APP}_master $REGISTRY/${APP}_image /usr/sbin/sshd -D
ExecStop=/usr/bin/docker stop ${APP}_master

EOF

cd $WORKDIR
fleetctl destroy ${APP}_master.service
fleetctl submit ${APP}_master.service
fleetctl start ${APP}_master.service

cat > ${DISCOVERY_MASTER} <<EOF
[Unit]
Description=${APP}_master_discovery
BindsTo=${APP}_master.service
After=${APP}_master.service

[Service]
ExecStart=/bin/sh -c "while true; do appip=\$(docker inspect --format='{{.NetworkSettings.IPAddress}}' ${APP}_master); etcdctl set /services/mapreduce/$APP/masters/master1 \$appip --ttl 60; sleep 10; done"
ExecStop=/usr/bin/etcdctl rm /services/mapreduce/$APP/masters/master1

[X-Fleet]
MachineOf=${APP}_master.service
EOF
 
cd $WORKDIR
fleetctl destroy ${DISCOVERY_MASTER}
fleetctl submit ${DISCOVERY_MASTER}
fleetctl start discovery_master_${APP}.service

[ -f $USERAPPDIR/slaves ] && (rm $USERAPPDIR/slaves)
[ -f $USERAPPDIR/masters ] && (rm $USERAPPDIR/masters)
touch $USERAPPDIR/slaves
touch $USERAPPDIR/masters

sleep 20 

for ((i=1; i<=$HOSTS; ++i))
do
	HOST=$(etcdctl get services/mapreduce/$APP/slaves/slave$i)
	echo $HOST >> $USERAPPDIR/slaves
done

HOST=$(etcdctl get services/mapreduce/$APP/masters/master1)
echo $HOST >> $USERAPPDIR/masters

[ -d $USERAPPDIR/replace ] && (sudo rm -r $USERAPPDIR/replace)
[ -d $USERAPPDIR/run_master ] && (sudo rm -r $USERAPPDIR/run_master)

mkdir $USERAPPDIR/replace
mkdir $USERAPPDIR/run_master
cp $USERAPPDIR/masters $USERAPPDIR/replace/
cp $USERAPPDIR/slaves $USERAPPDIR/replace/
touch $USERAPPDIR/replace/Dockerfile
touch $USERAPPDIR/replace/run
touch $USERAPPDIR/run_master/Dockerfile
touch $USERAPPDIR/run_master/run

masterip=$(cat $USERAPPDIR/masters)
while read line; do
	echo "scp /app/masters hduser@${line}:/usr/local/hadoop/conf/" >> $USERAPPDIR/replace/run
	echo "scp /app/slaves hduser@${line}:/usr/local/hadoop/conf/" >> $USERAPPDIR/replace/run
	echo "ssh hduser@${line} sed -i s/MASTER_IP/${masterip}/g /usr/local/hadoop/conf/mapred-site.xml" >> $USERAPPDIR/replace/run
	echo "ssh hduser@${line} sed -i s/MASTER_IP/${masterip}/g /usr/local/hadoop/conf/core-site.xml" >> $USERAPPDIR/replace/run
done < $USERAPPDIR/slaves

while read line; do
        echo "scp /app/masters hduser@${line}:/usr/local/hadoop/conf/" >> $USERAPPDIR/replace/run
        echo "scp /app/slaves hduser@${line}:/usr/local/hadoop/conf/" >> $USERAPPDIR/replace/run
	echo "ssh hduser@${line} sed -i s/MASTER_IP/${masterip}/g /usr/local/hadoop/conf/mapred-site.xml" >> $USERAPPDIR/replace/run
	echo "ssh hduser@${line} sed -i s/MASTER_IP/${masterip}/g /usr/local/hadoop/conf/core-site.xml" >> $USERAPPDIR/replace/run
done < $USERAPPDIR/masters

cat > $USERAPPDIR/replace/Dockerfile <<EOF
FROM $REGISTRY/ssh_master:v1
MAINTAINER hmonkey <5681713@qq.com>

COPY masters /app/masters
COPY slaves /app/slaves
COPY run /app/run
WORKDIR /app

EOF

while read line; do
	echo "ssh hduser@$line sh /app/run" >> $USERAPPDIR/run_master/run
done < $USERAPPDIR/masters

cat > $USERAPPDIR/run_master/Dockerfile <<EOF
FROM $REGISTRY/ssh_master:v1
MAINTAINER hmonkey <5681713@qq.com>

RUN mkdir /app
COPY run /app/run

EOF

docker build -t replace $USERAPPDIR/replace
docker build -t run_master $USERAPPDIR/run_master
docker run -d replace /bin/bash -c "sh /app/run"
docker run -d run_master /bin/bash -c "sh /app/run"

