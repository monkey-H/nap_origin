#!/bin/bash
USERAPPDIR=/home/nap/apps
NAPDIR=/home/nap/nap
SERDIR=/home/nap/services
args=$*
case $1 in
	#something I did before and will be used after
	git-receive-pack)
		shift 1
		$NAPDIR/git_push_treat $args
	;;

	#submit an app and not deploy it
	submit_app)
		shift 1
		$NAPDIR/submit_treat $*
	;;

	#list-machines
	list-machines)
		fleetctl list-machines
	;;
	
	#deploy 
	deploy_app)
		shift 1
		$NAPDIR/deploy_treat $*	
	;;

	#list services under this user
	list_services)
		[ -d $SERDIR/$2 ] && echo "$(ls $SERDIR/$2)" 
	;;

	#get the url of the service
	get_service_url)
		username=$(echo $2 | cut -d "_" -f 1)
                appname=$(echo $2 | cut -d "_" -f 2)
		echo $(etcdctl get /services/url/$username/$appname)
	;;

	#get instance number of the service
	get_instances_num)
		fleetctl list-units | grep "\<${2}_" | wc -l
	;;

	#list instances of a service
	list_instances)
		fleetctl list-units | grep "\<$2_"
	;;

	#get port of an instance
	get_port)
		if [ -z "$(echo $2 | cut -d '_' -f 4)" ]; then
			if [ -z "$(etcdctl get /services/port/$2 2> /dev/null)" ]; then
				echo "-"
			else
				etcdctl get /services/port/$2
			fi
		else 
			id=$(echo $2 | cut -d "@" -f 2)
			username=$(echo $2 | cut -d "_" -f 1)
              		appname=$(echo $2 | cut -d "_" -f 2)
			appid=$(echo $2 | cut -d "_" -f 3)
			appkind=$(echo $2 | cut -d "_" -f 4 | cut -d "@" -f 1)
			if [ "${appkind}" = "master" ]; then
				if [ -z "$(etcdctl get /services/port/${username}_${appname}_${appid}/master 2> /dev/null)" ]; then
					echo "-"
				else
					etcdctl get /services/port/${username}_${appname}_${appid}/master
				fi
			else
				if [ -z "$(etcdctl get /services/port/${username}_${appname}_${appid}/slaves/slave${id} 2> /dev/null)" ]; then
					echo "-"
				else
					etcdctl get /services/port/${username}_${appname}_${appid}/slaves/slave${id}
				fi
			fi
		fi
	;;

	#get the journal of an instance
	get_journal)
		fleetctl journal $2
	;;

	#stop an app
	stop_app)
		fleetctl stop $2
	;;

	#start an app
	start_app)
		fleetctl start $2
	;;

	#destroy an app
	destroy_app)
		fleetctl destroy $2
		docker rmi $(docker imags | grep $2) > /dev/null 2>&1
	;;

	#destroy an service
	destroy_service)
		fleetctl destroy $(fleetctl list-units | grep $2)
		username=$(echo $2 | cut -d "_" -f 1)
		sudo rm -r /home/nap/services/$username/$2 > /dev/null 2>&1	
		sudo rm -r /home/nap/apps/$username/${2}_* > /dev/null 2>&1
		docker rmi $(docker images | grep ${2}_) > /dev/null 2>&1
	;;

	#get the start command of an instance
	cat_app)
		username=$(echo $2 | cut -d "_" -f 1)
		appname=$(echo $2 | cut -d "_" -f 2)
		num=$(echo $2 | cut -d "_" -f 3)
		app="${username}_${appname}_${num}"
		if [ -f $USERAPPDIR/$username/$app/mpi.xml ]; then
			cat $USERAPPDIR/$username/$app/mpi.xml
		elif [ -f $USERAPPDIR/$username/$app/profile ]; then
			cat $USERAPPDIR/$username/$app/profile
		elif [ -f $USERAPPDIR/$username/$app/mapreduce.xml ]; then
			cat $USERAPPDIR/$username/$app/mapreduce.xml
		else
			cat $USERAPPDIR/$username/$app/Dockerfile
		fi
	;;

	#get the scheduled parameters in app profile
	get_parameters)
		shift 1
		$NAPDIR/get_parameters_treat $*
	;;

	#start an common app
	start_common)
		shift 1
		$NAPDIR/commonapp_treat $*
	;;

	#get images
	get_images)
		username=$(echo $2 | cut -d "_" -f 1)
		docker images | grep "\<${username}"
	;;

	#get active containers
	get_active)
		username=$(echo $2 | cut -d "_" -f 1)
		fleetctl list-units | grep "\<$username" | grep "\<active" | wc -l
	;;

	#get inactive containers
	get_inactive)
		username=$(echo $2 | cut -d "_" -f 1)
                all=$(fleetctl list-units | grep "\<$username" | wc -l)
		echo $[$all-$(fleetctl list-units | grep "\<$username" | grep "\<active" | wc -l)]
	;;

	#open a shell
	open_shell)
		ip=$(echo $(fleetctl list-units | grep "\<$2\.") | cut -d ' ' -f 2 | cut -d '/' -f 2)
		port=$($NAPDIR/nap get_port $2)
		if [ "$port" = "-" ]; then
			echo '-'
		else
			echo ${ip}:${port}
		fi
	;;


esac
